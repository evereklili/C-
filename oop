initial name is: ConsoleApp1.Account
Plase enter the name:
ÖMER DOĞU
myAccount's name is :ÖMER DOGU

C:\Program Files\dotnet\dotnet.exe (process 10096) exited with code 0.
To automatically close the console when debugging stops, enable Tools->Options->Debugging->Automatically close the console when debugging stops.
Press any key to close this window . . .





namespace ConsoleApp1
{
    internal class Account
    {
        private string name; //instance variable
        //property to get and set the name insance variable
        public string Name
        {
            get //returns the corresponding instance variable's value
            {
                return name; //return the value of name to te client code.
            }
            set  //assing a new value to the corresponding instance variable
            {
                name = value; //value is implicitly declared and initialized. 

            }
        }
    }
}
------------------------------------------------------------------------------------------
using System; //bir kütğphanenin eklenmesi gerekir. using c# dahil edilmesini kapsamaktadır. Kütüphaneleri buraya ekleyebiliriz. 


namespace ConsoleApp1
{
    class Omer//class ismi ile program ismi aynı olmak zorunda değidir!
    {
        static void Main(string[] args)
        {
            /*
             * oop class varlığı tanımlarız. nesne ise bu classtan üretilen varlıklardır. Yani classlar dosyaya yazılır.Nokta cs uzantılır. Bir classtan birden fazla nesne üretilebilinir. 
             * insanın kilosu, maaşı, doğum yeri, doğum tarihi, tanımlaır. 
             * Bu sınftan bir obje tanımlarız. Bu obje Ali olsun. İnsanına göre değişebilir dediğimiz kavram boyu olabilir. 
             * bir hesabı olan tanımlayalım. Set fonksiyonu atanmak için get de almak için kullanırız. İki ayrı method vardır. amaç name dışarıdan değişemsini engellemektir. Private yaparak ekranda üretilen nesne kendisi için değiştirilebilinir denmektedir.
             * public herkse onu değiştirebilinir denmektedir. Main methodu var. Account myAccount =new Account(); burada kullanılan new yeni bir obje üretmek için kullanılır. new  
             * Console.WriteLine(myAccount.GetName()); ekrana bunu myAccount.GetName alıyoruz 
             *yaşayan bir objeyi bir elips gibi görebiliriz. İnsana ait bir boyun özelliğini getName ve SetName ile alıp gönderebiliriz. Ya set ederiz. ya da get ederiz. İçerideki bilgiye sadece get ve set ile erişiriz.
             * 
             * 
             **/
            Account myAccount = new Account();
            Console.WriteLine($"initial name is: {myAccount}");
            Console.WriteLine("Plase enter the name:");
            string theName = Console.ReadLine(); //read a line of text or console information
            myAccount.Name = theName; //PUT private olan name erişmiyorum. set ve get fonksiyonuna erişiyorum. Duruma göre set veya get ediyor. içine değer atarsa set eder. alırsa get eder.  
            Console.WriteLine($"myAccount's name is :{myAccount.Name}");





        }
    }             


--------------------------------------------------------
